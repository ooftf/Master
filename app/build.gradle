apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
/*apply plugin: 'packer'*/
/*apply plugin: 'io.fabric'*/
apply from: 'matrix.gradle'
apply from: 'autoregister.gradle'
apply plugin: 'com.alibaba.arouter'
apply from: 'didi.gradle'
apply plugin: 'dagger.hilt.android.plugin'
/*apply plugin: 'plugin.test'*/

android {
    compileSdkVersion Versions.compileSdk
    defaultConfig {
        applicationId "com.master.kit"
        minSdkVersion Versions.minSdk
        targetSdkVersion Versions.targetSdk
        versionCode 10000
        versionName "1.0.0"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        //生成ARouter文档
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi-v7a' //, 'x86','armeabi', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
        buildConfigField("String", "APP_BUILD_TIME", "\"" + new Date().format("yyyy/MM/dd HH:mm:ss") + "\"")

    }
    compileOptions {
        sourceCompatibility Versions.java
        targetCompatibility Versions.java
    }
    packagingOptions {
        // More than one file was found with OS independent path 'lib/armeabi-v7a/libgnustl_shared.so'
        /* pickFirst 'lib/armeabi-v7a/libgnustl_shared.so'
           pickFirst 'lib/x86/libgnustl_shared.so'
           */
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
        pickFirst 'lib/x86/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/x86_64/libc++_shared.so'
        exclude 'META-INF/lib_release.kotlin_module'
        pickFirst 'META-INF/rxlifecycle-android-lifecycle-kotlin_release.kotlin_module'
        pickFirst 'META-INF/rxlifecycle-kotlin_release.kotlin_module'

    }
    signingConfigs {
        config {
            storeFile file('master.jks')
            keyAlias 'master'
            keyPassword 'master965661686'
            storePassword '965661686'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }
}
kapt {
    correctErrorTypes true
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

//packer-begin
/*packer {
    archiveNameFormat = '${appPkg}-${buildType}-v${versionName}-${channel}'
    archiveOutput = new File(project.rootProject.buildDir, "apks")
    channelList = ['*Douban*', 'Google/', '中文/@#市场']
}*/
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation AndroidX.constraintLayout
    androidTestImplementation TestDeps.runner
    androidTestImplementation TestDeps.espresso
    testImplementation TestDeps.junit

    implementation projectCompat(":m-sign")
    implementation projectCompat(":m-applet")
    implementation projectCompat(":m-debug")
    implementation projectCompat(":m-widget")
    implementation projectCompat(":m-source")
    implementation projectCompat(":m-other")
    //implementation projectCompat(":m-rn")
    implementation projectCompat(":m-webview")
    implementation projectCompat(":m-qrcode")
    //implementation projectCompat(":m-im")
    implementation projectCompat(":m-entrance")
    implementation projectCompat(":m-monitor")
    implementation projectCompat(":m-flutter")
    implementation projectCompat(":f-net")
    implementation projectCompat(':f-common')
    implementation projectCompat(':service')
    implementation projectCompat(':session')
    //kapt "com.google.dagger:dagger-compiler:$versions.dagger"
    kapt ARouter.compiler
    //kapt deps.dagger2_compiler
    implementation 'com.wanjian:cockroach:0.0.5'

    api Hilt.hiltAndroid
    kapt Hilt.hiltAndroidCompiler
    api Hilt.hiltLifecycleViewmodel
    kapt Hilt.compiler
}

//apply from: 'tinkerpatch.gradle'
//Firebase

